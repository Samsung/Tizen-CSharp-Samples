# Model Section : Model
[Model]
Type = NeuralNetwork	# Model Type : Regression, KNN, NeuralNetwork
Learning_rate = 0.0001 	# Learning Rate
Decay_rate = 0.96	# for the decay_rate for the decayed learning rate
Decay_steps = 1000       # decay step for the exponential decayed learning rate
Epochs = 1 		# Epoch
Optimizer = adam 	# Optimizer : sgd (stochastic gradien decent),
 	    		#             adam (Adamtive Moment Estimation)
loss = cross  		# Cost(loss) function : mse (mean squared error)
                        #                       cross (cross entropy)
batch_size = 3
save_path = "model.bin"  	# model path to save / read
beta1 = 0.9 		# beta 1 for adam
beta2 = 0.9999	# beta 2 for adam
epsilon = 1e-7	# epsilon for adam

[DataSet]
BufferSize=3
TrainData="trainingSet.dat"
ValidData="trainingSet.dat"

# Layer Section : Name
[inputlayer]
Type = input
Input_Shape = 1:1:62720	# Input Layer Dimensions
Normalization = true

[outputlayer]
Type = fully_connected
Unit = 10		# Output Layer Dimension ( = Weight Width )
bias_initializer = zeros
Activation = sigmoid 	# activation : sigmoid, softmax
Weight_Regularizer = l2norm
Weight_Regularizer_Constant = 0.005
input_layers=inputlayer
